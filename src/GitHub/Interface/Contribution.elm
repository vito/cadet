-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Interface.Contribution exposing (..)

import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onCreatedCommitContribution : SelectionSet decodesTo GitHub.Object.CreatedCommitContribution
    , onCreatedIssueContribution : SelectionSet decodesTo GitHub.Object.CreatedIssueContribution
    , onCreatedPullRequestContribution : SelectionSet decodesTo GitHub.Object.CreatedPullRequestContribution
    , onCreatedPullRequestReviewContribution : SelectionSet decodesTo GitHub.Object.CreatedPullRequestReviewContribution
    , onCreatedRepositoryContribution : SelectionSet decodesTo GitHub.Object.CreatedRepositoryContribution
    , onJoinedGitHubContribution : SelectionSet decodesTo GitHub.Object.JoinedGitHubContribution
    , onRestrictedContribution : SelectionSet decodesTo GitHub.Object.RestrictedContribution
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo GitHub.Interface.Contribution
fragments selections =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "CreatedCommitContribution" selections.onCreatedCommitContribution
        , Object.buildFragment "CreatedIssueContribution" selections.onCreatedIssueContribution
        , Object.buildFragment "CreatedPullRequestContribution" selections.onCreatedPullRequestContribution
        , Object.buildFragment "CreatedPullRequestReviewContribution" selections.onCreatedPullRequestReviewContribution
        , Object.buildFragment "CreatedRepositoryContribution" selections.onCreatedRepositoryContribution
        , Object.buildFragment "JoinedGitHubContribution" selections.onJoinedGitHubContribution
        , Object.buildFragment "RestrictedContribution" selections.onRestrictedContribution
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onCreatedCommitContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCreatedIssueContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCreatedPullRequestContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCreatedPullRequestReviewContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCreatedRepositoryContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onJoinedGitHubContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onRestrictedContribution = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


{-| Whether this contribution is associated with a record you do not have access to. For
example, your own 'first issue' contribution may have been made on a repository you can no
longer access.
-}
isRestricted : SelectionSet Bool GitHub.Interface.Contribution
isRestricted =
    Object.selectionForField "Bool" "isRestricted" [] Decode.bool


{-| When this contribution was made.
-}
occurredAt : SelectionSet GitHub.ScalarCodecs.DateTime GitHub.Interface.Contribution
occurredAt =
    Object.selectionForField "ScalarCodecs.DateTime" "occurredAt" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP path for this contribution.
-}
resourcePath : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Interface.Contribution
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP URL for this contribution.
-}
url : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Interface.Contribution
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The user who made this contribution.
-}
user :
    SelectionSet decodesTo GitHub.Object.User
    -> SelectionSet decodesTo GitHub.Interface.Contribution
user object_ =
    Object.selectionForCompositeField "user" [] object_ identity
