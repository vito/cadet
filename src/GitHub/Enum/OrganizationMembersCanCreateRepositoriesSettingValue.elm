-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Enum.OrganizationMembersCanCreateRepositoriesSettingValue exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible values for the members can create repositories setting on an organization.

  - All - Members will be able to create public and private repositories.
  - Private - Members will be able to create only private repositories.
  - Disabled - Members will not be able to create public or private repositories.

-}
type OrganizationMembersCanCreateRepositoriesSettingValue
    = All
    | Private
    | Disabled


list : List OrganizationMembersCanCreateRepositoriesSettingValue
list =
    [ All, Private, Disabled ]


decoder : Decoder OrganizationMembersCanCreateRepositoriesSettingValue
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ALL" ->
                        Decode.succeed All

                    "PRIVATE" ->
                        Decode.succeed Private

                    "DISABLED" ->
                        Decode.succeed Disabled

                    _ ->
                        Decode.fail ("Invalid OrganizationMembersCanCreateRepositoriesSettingValue type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : OrganizationMembersCanCreateRepositoriesSettingValue -> String
toString enum =
    case enum of
        All ->
            "ALL"

        Private ->
            "PRIVATE"

        Disabled ->
            "DISABLED"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe OrganizationMembersCanCreateRepositoriesSettingValue
fromString enumString =
    case enumString of
        "ALL" ->
            Just All

        "PRIVATE" ->
            Just Private

        "DISABLED" ->
            Just Disabled

        _ ->
            Nothing
