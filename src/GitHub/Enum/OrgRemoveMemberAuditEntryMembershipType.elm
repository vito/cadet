-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Enum.OrgRemoveMemberAuditEntryMembershipType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The type of membership a user has with an Organization.

  - DirectMember - A direct member is a user that is a member of the Organization.
  - Admin - Organization administrators have full access and can change several settings, including the names of repositories that belong to the Organization and Owners team membership. In addition, organization admins can delete the organization and all of its repositories.
  - BillingManager - A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.
  - Unaffiliated - An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the Organization.
  - OutsideCollaborator - An outside collaborator is a person who isn't explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization.

-}
type OrgRemoveMemberAuditEntryMembershipType
    = DirectMember
    | Admin
    | BillingManager
    | Unaffiliated
    | OutsideCollaborator


list : List OrgRemoveMemberAuditEntryMembershipType
list =
    [ DirectMember, Admin, BillingManager, Unaffiliated, OutsideCollaborator ]


decoder : Decoder OrgRemoveMemberAuditEntryMembershipType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "DIRECT_MEMBER" ->
                        Decode.succeed DirectMember

                    "ADMIN" ->
                        Decode.succeed Admin

                    "BILLING_MANAGER" ->
                        Decode.succeed BillingManager

                    "UNAFFILIATED" ->
                        Decode.succeed Unaffiliated

                    "OUTSIDE_COLLABORATOR" ->
                        Decode.succeed OutsideCollaborator

                    _ ->
                        Decode.fail ("Invalid OrgRemoveMemberAuditEntryMembershipType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : OrgRemoveMemberAuditEntryMembershipType -> String
toString enum =
    case enum of
        DirectMember ->
            "DIRECT_MEMBER"

        Admin ->
            "ADMIN"

        BillingManager ->
            "BILLING_MANAGER"

        Unaffiliated ->
            "UNAFFILIATED"

        OutsideCollaborator ->
            "OUTSIDE_COLLABORATOR"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe OrgRemoveMemberAuditEntryMembershipType
fromString enumString =
    case enumString of
        "DIRECT_MEMBER" ->
            Just DirectMember

        "ADMIN" ->
            Just Admin

        "BILLING_MANAGER" ->
            Just BillingManager

        "UNAFFILIATED" ->
            Just Unaffiliated

        "OUTSIDE_COLLABORATOR" ->
            Just OutsideCollaborator

        _ ->
            Nothing
