-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Object.EnterpriseServerUserAccountsUpload exposing (..)

import GitHub.Enum.EnterpriseServerUserAccountsUploadSyncState
import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet GitHub.ScalarCodecs.DateTime GitHub.Object.EnterpriseServerUserAccountsUpload
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The enterprise to which this upload belongs.
-}
enterprise :
    SelectionSet decodesTo GitHub.Object.Enterprise
    -> SelectionSet decodesTo GitHub.Object.EnterpriseServerUserAccountsUpload
enterprise object_ =
    Object.selectionForCompositeField "enterprise" [] object_ identity


{-| The Enterprise Server installation for which this upload was generated.
-}
enterpriseServerInstallation :
    SelectionSet decodesTo GitHub.Object.EnterpriseServerInstallation
    -> SelectionSet decodesTo GitHub.Object.EnterpriseServerUserAccountsUpload
enterpriseServerInstallation object_ =
    Object.selectionForCompositeField "enterpriseServerInstallation" [] object_ identity


id : SelectionSet GitHub.ScalarCodecs.Id GitHub.Object.EnterpriseServerUserAccountsUpload
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The name of the file uploaded.
-}
name : SelectionSet String GitHub.Object.EnterpriseServerUserAccountsUpload
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The synchronization state of the upload
-}
syncState : SelectionSet GitHub.Enum.EnterpriseServerUserAccountsUploadSyncState.EnterpriseServerUserAccountsUploadSyncState GitHub.Object.EnterpriseServerUserAccountsUpload
syncState =
    Object.selectionForField "Enum.EnterpriseServerUserAccountsUploadSyncState.EnterpriseServerUserAccountsUploadSyncState" "syncState" [] GitHub.Enum.EnterpriseServerUserAccountsUploadSyncState.decoder


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet GitHub.ScalarCodecs.DateTime GitHub.Object.EnterpriseServerUserAccountsUpload
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)
