-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Object.MarketplaceListing exposing (..)

import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The GitHub App this listing represents.
-}
app :
    SelectionSet decodesTo GitHub.Object.App
    -> SelectionSet (Maybe decodesTo) GitHub.Object.MarketplaceListing
app object_ =
    Object.selectionForCompositeField "app" [] object_ (identity >> Decode.nullable)


{-| URL to the listing owner's company site.
-}
companyUrl : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
companyUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "companyUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The HTTP path for configuring access to the listing's integration or OAuth app
-}
configurationResourcePath : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.MarketplaceListing
configurationResourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "configurationResourcePath" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP URL for configuring access to the listing's integration or OAuth app
-}
configurationUrl : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.MarketplaceListing
configurationUrl =
    Object.selectionForField "ScalarCodecs.Uri" "configurationUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| URL to the listing's documentation.
-}
documentationUrl : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
documentationUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "documentationUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The listing's detailed description.
-}
extendedDescription : SelectionSet (Maybe String) GitHub.Object.MarketplaceListing
extendedDescription =
    Object.selectionForField "(Maybe String)" "extendedDescription" [] (Decode.string |> Decode.nullable)


{-| The listing's detailed description rendered to HTML.
-}
extendedDescriptionHTML : SelectionSet GitHub.ScalarCodecs.Html GitHub.Object.MarketplaceListing
extendedDescriptionHTML =
    Object.selectionForField "ScalarCodecs.Html" "extendedDescriptionHTML" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


{-| The listing's introductory description.
-}
fullDescription : SelectionSet String GitHub.Object.MarketplaceListing
fullDescription =
    Object.selectionForField "String" "fullDescription" [] Decode.string


{-| The listing's introductory description rendered to HTML.
-}
fullDescriptionHTML : SelectionSet GitHub.ScalarCodecs.Html GitHub.Object.MarketplaceListing
fullDescriptionHTML =
    Object.selectionForField "ScalarCodecs.Html" "fullDescriptionHTML" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


{-| Does this listing have any plans with a free trial?
-}
hasPublishedFreeTrialPlans : SelectionSet Bool GitHub.Object.MarketplaceListing
hasPublishedFreeTrialPlans =
    Object.selectionForField "Bool" "hasPublishedFreeTrialPlans" [] Decode.bool


{-| Does this listing have a terms of service link?
-}
hasTermsOfService : SelectionSet Bool GitHub.Object.MarketplaceListing
hasTermsOfService =
    Object.selectionForField "Bool" "hasTermsOfService" [] Decode.bool


{-| A technical description of how this app works with GitHub.
-}
howItWorks : SelectionSet (Maybe String) GitHub.Object.MarketplaceListing
howItWorks =
    Object.selectionForField "(Maybe String)" "howItWorks" [] (Decode.string |> Decode.nullable)


{-| The listing's technical description rendered to HTML.
-}
howItWorksHTML : SelectionSet GitHub.ScalarCodecs.Html GitHub.Object.MarketplaceListing
howItWorksHTML =
    Object.selectionForField "ScalarCodecs.Html" "howItWorksHTML" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


id : SelectionSet GitHub.ScalarCodecs.Id GitHub.Object.MarketplaceListing
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| URL to install the product to the viewer's account or organization.
-}
installationUrl : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
installationUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "installationUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| Whether this listing's app has been installed for the current viewer
-}
installedForViewer : SelectionSet Bool GitHub.Object.MarketplaceListing
installedForViewer =
    Object.selectionForField "Bool" "installedForViewer" [] Decode.bool


{-| Whether this listing has been removed from the Marketplace.
-}
isArchived : SelectionSet Bool GitHub.Object.MarketplaceListing
isArchived =
    Object.selectionForField "Bool" "isArchived" [] Decode.bool


{-| Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.
-}
isDraft : SelectionSet Bool GitHub.Object.MarketplaceListing
isDraft =
    Object.selectionForField "Bool" "isDraft" [] Decode.bool


{-| Whether the product this listing represents is available as part of a paid plan.
-}
isPaid : SelectionSet Bool GitHub.Object.MarketplaceListing
isPaid =
    Object.selectionForField "Bool" "isPaid" [] Decode.bool


{-| Whether this listing has been approved for display in the Marketplace.
-}
isPublic : SelectionSet Bool GitHub.Object.MarketplaceListing
isPublic =
    Object.selectionForField "Bool" "isPublic" [] Decode.bool


{-| Whether this listing has been rejected by GitHub for display in the Marketplace.
-}
isRejected : SelectionSet Bool GitHub.Object.MarketplaceListing
isRejected =
    Object.selectionForField "Bool" "isRejected" [] Decode.bool


{-| Whether this listing has been approved for unverified display in the Marketplace.
-}
isUnverified : SelectionSet Bool GitHub.Object.MarketplaceListing
isUnverified =
    Object.selectionForField "Bool" "isUnverified" [] Decode.bool


{-| Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace.
-}
isUnverifiedPending : SelectionSet Bool GitHub.Object.MarketplaceListing
isUnverifiedPending =
    Object.selectionForField "Bool" "isUnverifiedPending" [] Decode.bool


{-| Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace.
-}
isVerificationPendingFromDraft : SelectionSet Bool GitHub.Object.MarketplaceListing
isVerificationPendingFromDraft =
    Object.selectionForField "Bool" "isVerificationPendingFromDraft" [] Decode.bool


{-| Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace.
-}
isVerificationPendingFromUnverified : SelectionSet Bool GitHub.Object.MarketplaceListing
isVerificationPendingFromUnverified =
    Object.selectionForField "Bool" "isVerificationPendingFromUnverified" [] Decode.bool


{-| Whether this listing has been approved for verified display in the Marketplace.
-}
isVerified : SelectionSet Bool GitHub.Object.MarketplaceListing
isVerified =
    Object.selectionForField "Bool" "isVerified" [] Decode.bool


{-| The hex color code, without the leading '#', for the logo background.
-}
logoBackgroundColor : SelectionSet String GitHub.Object.MarketplaceListing
logoBackgroundColor =
    Object.selectionForField "String" "logoBackgroundColor" [] Decode.string


type alias LogoUrlOptionalArguments =
    { size : OptionalArgument Int }


{-| URL for the listing's logo image.

  - size - The size in pixels of the resulting square image.

-}
logoUrl :
    (LogoUrlOptionalArguments -> LogoUrlOptionalArguments)
    -> SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
logoUrl fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { size = Absent }

        optionalArgs =
            [ Argument.optional "size" filledInOptionals.size Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "logoUrl" optionalArgs (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The listing's full name.
-}
name : SelectionSet String GitHub.Object.MarketplaceListing
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The listing's very short description without a trailing period or ampersands.
-}
normalizedShortDescription : SelectionSet String GitHub.Object.MarketplaceListing
normalizedShortDescription =
    Object.selectionForField "String" "normalizedShortDescription" [] Decode.string


{-| URL to the listing's detailed pricing.
-}
pricingUrl : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
pricingUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "pricingUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The category that best describes the listing.
-}
primaryCategory :
    SelectionSet decodesTo GitHub.Object.MarketplaceCategory
    -> SelectionSet decodesTo GitHub.Object.MarketplaceListing
primaryCategory object_ =
    Object.selectionForCompositeField "primaryCategory" [] object_ identity


{-| URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL.
-}
privacyPolicyUrl : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.MarketplaceListing
privacyPolicyUrl =
    Object.selectionForField "ScalarCodecs.Uri" "privacyPolicyUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP path for the Marketplace listing.
-}
resourcePath : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.MarketplaceListing
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The URLs for the listing's screenshots.
-}
screenshotUrls : SelectionSet (List (Maybe String)) GitHub.Object.MarketplaceListing
screenshotUrls =
    Object.selectionForField "(List (Maybe String))" "screenshotUrls" [] (Decode.string |> Decode.nullable |> Decode.list)


{-| An alternate category that describes the listing.
-}
secondaryCategory :
    SelectionSet decodesTo GitHub.Object.MarketplaceCategory
    -> SelectionSet (Maybe decodesTo) GitHub.Object.MarketplaceListing
secondaryCategory object_ =
    Object.selectionForCompositeField "secondaryCategory" [] object_ (identity >> Decode.nullable)


{-| The listing's very short description.
-}
shortDescription : SelectionSet String GitHub.Object.MarketplaceListing
shortDescription =
    Object.selectionForField "String" "shortDescription" [] Decode.string


{-| The short name of the listing used in its URL.
-}
slug : SelectionSet String GitHub.Object.MarketplaceListing
slug =
    Object.selectionForField "String" "slug" [] Decode.string


{-| URL to the listing's status page.
-}
statusUrl : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
statusUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "statusUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| An email address for support for this listing's app.
-}
supportEmail : SelectionSet (Maybe String) GitHub.Object.MarketplaceListing
supportEmail =
    Object.selectionForField "(Maybe String)" "supportEmail" [] (Decode.string |> Decode.nullable)


{-| Either a URL or an email address for support for this listing's app, may return an empty string for listings that do not require a support URL.
-}
supportUrl : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.MarketplaceListing
supportUrl =
    Object.selectionForField "ScalarCodecs.Uri" "supportUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| URL to the listing's terms of service.
-}
termsOfServiceUrl : SelectionSet (Maybe GitHub.ScalarCodecs.Uri) GitHub.Object.MarketplaceListing
termsOfServiceUrl =
    Object.selectionForField "(Maybe ScalarCodecs.Uri)" "termsOfServiceUrl" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The HTTP URL for the Marketplace listing.
-}
url : SelectionSet GitHub.ScalarCodecs.Uri GitHub.Object.MarketplaceListing
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Can the current viewer add plans for this Marketplace listing.
-}
viewerCanAddPlans : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanAddPlans =
    Object.selectionForField "Bool" "viewerCanAddPlans" [] Decode.bool


{-| Can the current viewer approve this Marketplace listing.
-}
viewerCanApprove : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanApprove =
    Object.selectionForField "Bool" "viewerCanApprove" [] Decode.bool


{-| Can the current viewer delist this Marketplace listing.
-}
viewerCanDelist : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanDelist =
    Object.selectionForField "Bool" "viewerCanDelist" [] Decode.bool


{-| Can the current viewer edit this Marketplace listing.
-}
viewerCanEdit : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanEdit =
    Object.selectionForField "Bool" "viewerCanEdit" [] Decode.bool


{-| Can the current viewer edit the primary and secondary category of this
Marketplace listing.
-}
viewerCanEditCategories : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanEditCategories =
    Object.selectionForField "Bool" "viewerCanEditCategories" [] Decode.bool


{-| Can the current viewer edit the plans for this Marketplace listing.
-}
viewerCanEditPlans : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanEditPlans =
    Object.selectionForField "Bool" "viewerCanEditPlans" [] Decode.bool


{-| Can the current viewer return this Marketplace listing to draft state
so it becomes editable again.
-}
viewerCanRedraft : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanRedraft =
    Object.selectionForField "Bool" "viewerCanRedraft" [] Decode.bool


{-| Can the current viewer reject this Marketplace listing by returning it to
an editable draft state or rejecting it entirely.
-}
viewerCanReject : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanReject =
    Object.selectionForField "Bool" "viewerCanReject" [] Decode.bool


{-| Can the current viewer request this listing be reviewed for display in
the Marketplace as verified.
-}
viewerCanRequestApproval : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerCanRequestApproval =
    Object.selectionForField "Bool" "viewerCanRequestApproval" [] Decode.bool


{-| Indicates whether the current user has an active subscription to this Marketplace listing.
-}
viewerHasPurchased : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerHasPurchased =
    Object.selectionForField "Bool" "viewerHasPurchased" [] Decode.bool


{-| Indicates if the current user has purchased a subscription to this Marketplace listing
for all of the organizations the user owns.
-}
viewerHasPurchasedForAllOrganizations : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerHasPurchasedForAllOrganizations =
    Object.selectionForField "Bool" "viewerHasPurchasedForAllOrganizations" [] Decode.bool


{-| Does the current viewer role allow them to administer this Marketplace listing.
-}
viewerIsListingAdmin : SelectionSet Bool GitHub.Object.MarketplaceListing
viewerIsListingAdmin =
    Object.selectionForField "Bool" "viewerIsListingAdmin" [] Decode.bool
