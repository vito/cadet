-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Object.StatusCheckRollup exposing (..)

import GitHub.Enum.StatusState
import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The commit the status and check runs are attached to.
-}
commit :
    SelectionSet decodesTo GitHub.Object.Commit
    -> SelectionSet (Maybe decodesTo) GitHub.Object.StatusCheckRollup
commit object_ =
    Object.selectionForCompositeField "commit" [] object_ (identity >> Decode.nullable)


type alias ContextsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of status contexts and check runs for this commit.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
contexts :
    (ContextsOptionalArguments -> ContextsOptionalArguments)
    -> SelectionSet decodesTo GitHub.Object.StatusCheckRollupContextConnection
    -> SelectionSet decodesTo GitHub.Object.StatusCheckRollup
contexts fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "contexts" optionalArgs object_ identity


id : SelectionSet GitHub.ScalarCodecs.Id GitHub.Object.StatusCheckRollup
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (GitHub.ScalarCodecs.codecs |> GitHub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The combined status for the commit.
-}
state : SelectionSet GitHub.Enum.StatusState.StatusState GitHub.Object.StatusCheckRollup
state =
    Object.selectionForField "Enum.StatusState.StatusState" "state" [] GitHub.Enum.StatusState.decoder
