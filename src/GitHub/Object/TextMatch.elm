-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GitHub.Object.TextMatch exposing (..)

import GitHub.InputObject
import GitHub.Interface
import GitHub.Object
import GitHub.Scalar
import GitHub.ScalarCodecs
import GitHub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The specific text fragment within the property matched on.
-}
fragment : SelectionSet String GitHub.Object.TextMatch
fragment =
    Object.selectionForField "String" "fragment" [] Decode.string


{-| Highlights within the matched fragment.
-}
highlights :
    SelectionSet decodesTo GitHub.Object.TextMatchHighlight
    -> SelectionSet (List decodesTo) GitHub.Object.TextMatch
highlights object_ =
    Object.selectionForCompositeField "highlights" [] object_ (identity >> Decode.list)


{-| The property matched on.
-}
property : SelectionSet String GitHub.Object.TextMatch
property =
    Object.selectionForField "String" "property" [] Decode.string
